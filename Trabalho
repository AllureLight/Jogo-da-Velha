#include <stdio.h>
#include <stdlib.h>

#define TAM 3 // Tamanho do tabuleiro (3x3)

char tabuleiro[TAM][TAM];  // Tabuleiro do jogo
int jogadas[9][2];  // Para armazenar as coordenadas de cada jogada no jogo
int contador_jogadas = 0;  // Contador para controlar o número de jogadas

// Funcao para inicializar o tabuleiro com espaços vazios
void inicializarTabuleiro() {
    for (int i = 0; i < TAM; i++) {
        for (int j = 0; j < TAM; j++) {
            tabuleiro[i][j] = ' '; // Preenche com espaços vazios
        }
    }
}

// Funcao para mostrar o tabuleiro na tela
void exibirTabuleiro() {
    printf("\nTabuleiro do Jogo da Velha:\n");
    for (int i = 0; i < TAM; i++) {
        for (int j = 0; j < TAM; j++) {
            printf(" %c ", tabuleiro[i][j]);
            if (j < TAM - 1) printf("|");
        }
        printf("\n");
        if (i < TAM - 1) printf("---|---|---\n");
    }
    printf("\n");
}

// Funcao para verificar se há um vencedor
char verificarVencedor() {
    // Verificar linhas
    for (int i = 0; i < TAM; i++) {
        if (tabuleiro[i][0] == tabuleiro[i][1] && tabuleiro[i][1] == tabuleiro[i][2] && tabuleiro[i][0] != ' ') {
            return tabuleiro[i][0];
        }
    }
    // Verificar colunas
    for (int j = 0; j < TAM; j++) {
        if (tabuleiro[0][j] == tabuleiro[1][j] && tabuleiro[1][j] == tabuleiro[2][j] && tabuleiro[0][j] != ' ') {
            return tabuleiro[0][j];
        }
    }
    // Verificar diagonais
    if (tabuleiro[0][0] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][2] && tabuleiro[0][0] != ' ') {
        return tabuleiro[0][0];
    }
    if (tabuleiro[0][2] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][0] && tabuleiro[0][2] != ' ') {
        return tabuleiro[0][2];
    }
    return ' ';  // Nenhum vencedor
}

// Funcao para registrar a jogada de um jogador
void registrarJogada(int linha, int coluna, char jogador) {
    tabuleiro[linha][coluna] = jogador;
    jogadas[contador_jogadas][0] = linha;
    jogadas[contador_jogadas][1] = coluna;
    contador_jogadas++;
}

// Funcao para verificar se o tabuleiro está cheio (empate)
int tabuleiroCheio() {
    return contador_jogadas == 9;
}

// Funcao para fazer o replay de uma partida passada
void replay() {
    printf("\nReplay da Partida:\n");
    for (int i = 0; i < contador_jogadas; i++) {
        int linha = jogadas[i][0];
        int coluna = jogadas[i][1];
        char jogador = (i % 2 == 0) ? 'X' : 'O';
        tabuleiro[linha][coluna] = jogador;  // Reverte o tabuleiro para o estado da jogada
        exibirTabuleiro();
        printf("Jogada %d: Jogador %c fez a jogada na linha %d, coluna %d\n", i + 1, jogador, linha + 1, coluna + 1);
        printf("\nPressione enter para continuar...");
        getchar();  // Aguarda o jogador pressionar Enter
    }
}

// Funcao principal
int main() {
    int linha, coluna;
    char vencedor = ' ';
    int jogando = 1;

    // Inicializa o tabuleiro
    inicializarTabuleiro();

    // Loop do jogo
    while (jogando) {
        exibirTabuleiro();

        // Alterna entre os jogadores 'X' e 'O'
        char jogadorAtual = (contador_jogadas % 2 == 0) ? 'X' : 'O';
        printf("Jogador %c, insira a linha (1-3) e coluna (1-3) da sua jogada: ", jogadorAtual);
        scanf("%d %d", &linha, &coluna);
        linha--;  // Ajuste para indice de 0 a 2
        coluna--;

        // Verifica se a posição e valida
        if (linha < 0 || linha >= TAM || coluna < 0 || coluna >= TAM || tabuleiro[linha][coluna] != ' ') {
            printf("Jogada invalida! Tente novamente.\n");
            continue;
        }

        // Registra a jogada
        registrarJogada(linha, coluna, jogadorAtual);

        // Verifica se ha um vencedor
        vencedor = verificarVencedor();
        if (vencedor != ' ') {
            exibirTabuleiro();
            printf("Jogador %c venceu!\n", vencedor);
            jogando = 0;  // Finaliza o jogo
        } else if (tabuleiroCheio()) {
            exibirTabuleiro();
            printf("Empate! O tabuleiro esta cheio.\n");
            jogando = 0;  // Finaliza o jogo
        }
    }

    // Pergunta se o jogador quer ver o replay
    char opcao;
    printf("Voce gostaria de ver o replay da partida? (s/n): ");
    getchar();  // Limpa o buffer do scanf
    scanf("%c", &opcao);
    if (opcao == 's' || opcao == 'S') {
        replay();
    }

    return 0;
}
